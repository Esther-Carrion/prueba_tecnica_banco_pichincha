plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.openapi.generator' version '7.0.1'
    id 'info.solidsoft.pitest' version '1.15.0'
}

group = 'com.pichincha'
version = '0.0.1-SNAPSHOT'
description = 'project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


openApiGenerate {
	generatorName = "spring"
	inputSpec = "${rootDir}/openapi.yml".toString()
	outputDir = "${buildDir}/generated".toString()
	apiPackage = "com.pichincha.infrastructure.adapter.rest.api"
	modelPackage = "com.pichincha.infrastructure.adapter.rest.dto"
	configOptions = [
			interfaceOnly    : "true",
			useTags          : "true",
			useSpringBoot3   : "true",
			serializationLibrary: "jackson"
	]
}

sourceSets {
	main {
		java {
			srcDirs += "${buildDir}/generated/src/main/java"
		}
	}
}

compileJava.dependsOn tasks.openApiGenerate

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// PostgreSQL
	runtimeOnly 'org.postgresql:postgresql'

	// OpenAPI / Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

	// Jackson
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	// Ensure Lombok and MapStruct work together during annotation processing
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	testAnnotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// PDF generation
	implementation 'com.openhtmltopdf:openhtmltopdf-pdfbox:1.0.10'
	implementation 'com.openhtmltopdf:openhtmltopdf-slf4j:1.0.10'
	implementation 'com.lowagie:itext:2.1.7'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// PIT Mutation Testing (JUnit 5 plugin)
	pitest 'org.pitest:pitest-junit5-plugin:1.2.1'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.mockito:mockito-junit-jupiter'
	testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
	useJUnitPlatform()
}

// PIT configuration
pitest {

	testPlugin = 'junit5'
	pitestVersion = '1.15.6'
	targetClasses = ['com.pichincha.accounts.*']
	targetTests = ['com.pichincha.accounts.*']
	excludedClasses = [
			'com.pichincha.accounts.AccountsApplication',
			'com.pichincha.accounts.infrastructure.mapper.*',
			'com.pichincha.accounts.application.port.input.*',
			'com.pichincha.accounts.application.port.output.*',
			'com.pichincha.accounts.infrastructure.adapter.persistence.repository.*'
	]

	reportDir = file("${buildDir}/reports/pitest/unit")
	threads = 2
	outputFormats = ['HTML', 'XML']
	timestampedReports = false
}
